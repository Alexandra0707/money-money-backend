{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Money-money app",
    "description": "This is a documentation of Money-money app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Registration, login and logout of users"
    },
    {
      "name": "User",
      "description": "Retrieve current user information"
    },
    {
      "name": "Categories",
      "description": "List of income and expense categories"
    },
    {
      "name": "Transactions",
      "description": "Operations with user transactions"
    },
    {
      "name": "Summary",
      "description": "Financial summary of user transactions"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "security": [],
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Antonio Banderas"
                  },
                  "email": {
                    "type": "string",
                    "example": "Antonio123@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456789"
                  },
                  "balance": {
                    "type": "number",
                    "example": "0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registration",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": "201"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserAuth"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict Error",
            "content": {
              "application\\json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "ConflictError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "A user with this email already exists"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "security": [],
        "tags": [
          "Auth"
        ],
        "summary": "Log in an existing user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "Antonio123@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": 123456789
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "user",
                        "token"
                      ],
                      "properties": {
                        "user": {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "email",
                            "balance"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "8fa102c87d6e43d3a6e52bda91da45ea"
                            },
                            "name": {
                              "type": "string",
                              "example": "Antonio Banderas"
                            },
                            "email": {
                              "type": "string",
                              "example": "Antonio123@gmail.com"
                            },
                            "balance": {
                              "type": "number",
                              "example": 0
                            },
                            "token": {
                              "type": "string",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Log out the current user",
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get current user",
        "description": "Returns public information about the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – missing or invalid token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get list of income and expense categories",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Products"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – missing or invalid token"
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a new transaction",
        "description": "Adds a new income or expense transaction for the current user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "income",
                      "expense"
                    ],
                    "description": "Type of the transaction (income or expense)",
                    "example": "EXPENSE"
                  },
                  "_id": {
                    "type": "string",
                    "example": "c143130f-7d1e-4011-90a4-54766d4e308e"
                  },
                  "sum": {
                    "type": "number",
                    "format": "float",
                    "description": "Transaction amount (must be non-negative)",
                    "example": 25.5
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-26T10:00:00Z"
                  },
                  "comment": {
                    "type": "string",
                    "example": "Lunch at a cafe"
                  }
                },
                "required": [
                  "type",
                  "_id",
                  "sum",
                  "date",
                  "comment"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "description": "../../components/responses/401.yaml"
          }
        }
      },
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all user transactions",
        "description": "Returns a list of all transactions for the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "401": {
            "description": "../../components/responses/401.yaml"
          },
          "500": {
            "description": "../../components/responses/500.yaml"
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get a transaction by ID",
        "description": "Returns a single transaction by its ID for the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the transaction to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "../../../components/responses/401.yaml"
          },
          "404": {
            "description": "../../../components/responses/404.yaml"
          }
        }
      },
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update a transaction",
        "description": "Updates fields of a transaction by ID for the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the transaction to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "description": "Unauthorized – missing or invalid token"
          },
          "404": {
            "description": "../../../components/responses/404.yaml"
          }
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "Delete a transaction",
        "description": "Deletes a transaction by ID for the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the transaction to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Transaction deleted successfully (No Content)"
          },
          "401": {
            "description": "../../components/responses/401.yaml"
          },
          "404": {
            "description": "../../components/responses/404.yaml"
          }
        }
      }
    },
    "/summary": {
      "get": {
        "tags": [
          "Summary"
        ],
        "summary": "Get financial summary for a specific month and year",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            },
            "description": "Month number (1-12)"
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2024
            },
            "description": "Year in YYYY format"
          }
        ],
        "responses": {
          "200": {
            "description": "Summary data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalIncome": {
                      "type": "number",
                      "example": 2500.5
                    },
                    "totalExpense": {
                      "type": "number",
                      "example": 1432.75
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "category": {
                            "type": "string",
                            "example": "Products"
                          },
                          "amount": {
                            "type": "number",
                            "example": 300
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "description": "Unauthorized – missing or invalid token"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserAuth": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "4ab91bd209434427aed468340dcd48d6"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "Antonio Banderas"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "minLength": 6,
            "maxLength": 12,
            "example": "StepDake123"
          },
          "balance": {
            "type": "number",
            "default": "0,"
          }
        }
      },
      "UserPublic": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "664fb8d7a43d13e0123a4567"
          },
          "userName": {
            "type": "string",
            "example": "Mark Dorn"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "mark@example.com"
          },
          "balance": {
            "type": "number",
            "example": 1200
          }
        },
        "required": [
          "_id",
          "userName",
          "email",
          "balance"
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6651234567abcdef01234567"
          },
          "userId": {
            "type": "string",
            "example": "664fb8d7a43d13e0123a4567"
          },
          "type": {
            "type": "string",
            "enum": [
              "income",
              "expense"
            ],
            "example": "expense"
          },
          "category": {
            "type": "string",
            "example": "food"
          },
          "sum": {
            "type": "number",
            "example": 250
          },
          "comment": {
            "type": "string",
            "example": "Lunch at a cafe"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-02T12:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-02T12:00:00.000Z"
          }
        },
        "required": [
          "_id",
          "userId",
          "type",
          "category",
          "sum",
          "createdAt",
          "updatedAt"
        ]
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found Error",
        "content": {
          "application\\json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application\\json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Invalid input data",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid input data"
                }
              }
            }
          }
        }
      }
    }
  }
}